name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:

    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip

        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Set up test environment
      run: |
        cp backend/.env.example backend/.env
        # Override with test database URL
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> backend/.env
        echo "REDIS_URL=redis://localhost:6379/0" >> backend/.env
    
    - name: Run integration tests
      run: |
        python run_integration_tests.py --verbose
    
    - name: Upload test results
      uses: actions/upload-artifact@v3

# Removed orphaned cache configuration
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-html pytest-cov
        
    - name: Run integration tests
      run: |
        python run_integration_tests.py --verbose --html-report --coverage
        
    - name: Upload test results
      uses: actions/upload-artifact@v4

      if: always()
      with:
        name: integration-test-results
        path: |
          test-results/
          coverage-report/